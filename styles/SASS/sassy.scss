// Variables

$color-1: #94a7ff;
$color-2: #cf94ff;
$color-3: #fdad52;
$code-yellow: #FFD913;
$indent-color-0 : #edca1d;
$indent-color-1 : #d6c155;
$indent-color-2 : #e3d382;
$indent-color-3 : #ded1a0;
$indent-color-4 : #f8f4de;

$standard-border: 5px solid $color-2;
$alternate-border: 5px solid $color-3;
$indentation: 0.75rem;

@mixin nested-indents($depth) {
    $indent: $depth * $indentation;
    margin-left: $indent;
}


.sassVars {
    display: flex;
    flex-flow: column;
    div {
        display: flex;
        flex-direction: row;
        height: 15px;
    }
}
.colorBox {
    height: 15px;
    width: 15px;
    position: relative;
    display: flex;
    z-index: 3;
}
.box1 {
    background-color: $color-1;
}
.box2 {
    background-color: $color-2;
}
.box3 {
    background-color: $color-3;
}

.indentingCode {
    margin-bottom: 1rem;
line-height: 1.2rem;
    border: 10px solid $code-yellow;
    // border-right: 10px+0.5rem solid $code-yellow;
    background-color: $indent-color-0;
    @include nested-indents(0); // Initial indentation

    div {
        @include nested-indents(1); // Nested indentation level 1
        background-color: $indent-color-1;

        div {
            @include nested-indents(2); // Nested indentation level 2
            background-color: $indent-color-2;

            div {
                @include nested-indents(3); // Nested indentation level 3
                background-color: $indent-color-3;

                div {
                    @include nested-indents(4); // Nested indentation level 4
                    background-color: $indent-color-4;
                }
            }
        }
    }
}


.sassyParent {
    width: 200px;
    height: 80px;
    margin: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: $color-1;
    border : {
        top: $standard-border;
        bottom: $standard-border;
        right: $alternate-border;
        left: $alternate-border
    }

    &:hover {
        background-color: $color-3;
        .sassyChild {
            background-color: $color-1;
        }
    }

    .sassyChild {
        width: 70px;
        height: 30px;
        background-color: $color-3;
        margin: auto;
        &:hover {
            background-color: $color-2;
        }
    }
}


.subSub {
    margin-bottom: 1rem;
    padding: 1rem;
    border: 7px solid #d5eda5;
    border-radius: 10px;

    .subSubTitle{
        color: #4f7d43;
        font-size: 1.1rem;
    div {
        margin-right: 2rem;
    }
    p {
        font-size: 1rem;
    }
    }
}


// ---------------------EACH LOOP 
$list: (orchid, cornflowerblue
, orange);
//Add your each-loop here
@each $item in $list {
  .#{$item} {
    background: $item;
  }
}




// ---------------------IF, ELSE IF 
@mixin deck($suit) {
    @if($suit == diamonds or $suit == spades){
      color: $color-1;
    }
    @else if($suit == clovers or $suit == hearts ){
      color: $color-2;
    }
    @else {
      //some rule
    }
   }
   .card {
    width: 100px;
    height: 150px;
    border: 1px solid black;
    margin: 10px;
    display: inline-flex;
    justify-content: center;    
    align-items: center;
    text-align: center;
    background-color: rgb(233, 227, 223);
  }
.hearts {
    @include deck(hearts);
  }
  .spades {
    @include deck(spades);
  }
  .clovers {
    @include deck(clovers);
  }
  .diamonds {
    @include deck(diamonds);
  }
  .unknown {
    @include deck(unknown);
  }



// ---------------------FOR LOOP
$total: 10; //Number of .ray divs in our html
$step: 360deg / $total; //Used to compute the hue based on color-wheel
.ray {
    height: 30px;
}
//Add your for-loop here:
@for $i from 1 through $total {
    .ray:nth-child(#{$i}) {
        background: adjust-hue($color-1, $i * $step);
        width: if($i % 2==0, 150px, 200px);
        margin-left: if($i % 2==0, 50px, 0px);
    }
}